services:
  postgres:
    image: postgres:16.6-alpine3.20
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: idreesia
    ports:
      - 5432:5432
    volumes:
      - postgres-dev:/var/lib/postgresql/data:cached
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    ports:
      - "9000:9000"
      - "9001:9001" # Console
    environment:
      MINIO_ROOT_USER: minio_root_user
      MINIO_ROOT_PASSWORD: minio_root_user_password
    volumes:
      - minio-dev:/data:cached
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server --console-address ":9001" /data

  minio-defaultbuckets:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio_root_user minio_root_user_password;
      /usr/bin/mc mb myminio/idreesia-files;
      exit 0;
      "

  idreesia-web:
    build:
      context: .
      dockerfile: ./packages/idreesia-web/Dockerfile.development
      platforms:
        - "linux/amd64"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    volumes:
      - .:/idreesia-erp
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://idreesia-web:3000"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 10

  caddy:
    image: caddy:2.6.1-alpine
    restart: unless-stopped
    depends_on:
      - idreesia-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/caddy:/etc/caddy

volumes:
  postgres-dev: {}
  minio-dev: {}
